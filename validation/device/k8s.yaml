apiVersion: apps/v1
kind: Deployment
metadata:
  name: device5-dapp
  namespace: recval
spec:
  replicas: 1
  selector:
    matchLabels:
      app: device5-dapp
  template:
    metadata:
      labels:
        app: device5-dapp
    spec:
      containers:
        - name: device-dapp
          image: f221267155/devicedapp:v2
          imagePullPolicy: Never
          env:
            - name: TARGET_ORG
              value: "3"
            - name: NETWORK_ID
              valueFrom:
                configMapKeyRef:
                  name: genesis1
                  key: networkid
          command:
            - "/bin/bash"
          args:
            - -c
            - |
              filename=$(basename /ethereum/keystore/*)
              account=0x$(jq -r '.address' /ethereum/keystore/$filename)
              nohup geth --syncmode "light" --networkid ${NETWORK_ID} --bootnodes enode://`bootnode -writeaddress --nodekey=/opt/bootnode/boot.key`@$(BOOTNODE_SERVICE_HOST):30301 --datadir /ethereum  --unlock $account --password /opt/password/password.txt  --http --http.addr 0.0.0.0 --http.port 8545 --http.corsdomain '*'  --http.api 'admin,eth,net,web3,personal,miner' --nousb --allow-insecure-unlock &
              password=$(cat /opt/password/password.txt)
              bash /app/start.sh /ethereum $account $password
          ports:
            - containerPort: 8545
              name: rpc
            - containerPort: 30303
              name: discovery-tcp
              protocol: TCP
            - containerPort: 30303
              name: discovery-udp
              protocol: UDP
          volumeMounts:
            - name: chaindata
              mountPath: "/ethereum"
            - name: genesis
              mountPath: "/opt/genesis"
              readOnly: true
            - name: contract
              mountPath: "/opt/contract"
              readOnly: true
            - name: password
              mountPath: "/opt/password"
              readOnly: true
            - name: bootkey
              mountPath: "/opt/bootnode"
              readOnly: true
      initContainers:
        - name: init
          image: f221267155/eth-testnet:v1
          command: ["geth"]
          args: ["--datadir=/ethereum", "account", "new", "--password=/opt/password/password.txt"]
          volumeMounts:
            - name: password
              mountPath: "/opt/password"
              readOnly: true
            - name: chaindata
              mountPath: "/ethereum"
        - name: genesis
          image: f221267155/eth-testnet:v1
          command: ["geth"]
          args: ["--datadir=/ethereum", "init", "/opt/genesis/genesis.json"]
          volumeMounts:
            - name: genesis
              mountPath: /opt/genesis
              readOnly: true
            - name: chaindata
              mountPath: "/ethereum"
      volumes:
        - name: genesis
          configMap:
            name: genesis1
        - name: contract
          configMap:
            name: contract
        - name: chaindata
          emptyDir: {}
        - name: password
          secret:
            secretName: password1
        - name: bootkey
          secret:
            secretName: bootkey1