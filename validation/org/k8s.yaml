apiVersion: apps/v1
kind: Deployment
metadata:
  name: org3-dapp-deployname
  namespace: recval
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org3-dapp-service
  template:
    metadata:
      labels:
        app: org3-dapp-service
    spec:
      containers:
        - name: org-dapp
          image: f221267155/orgdapp:v2
          imagePullPolicy: Never
          command:
            - "/bin/bash"
          env:
            - name: ORG_NAME
              value: "org3-name"
            - name: ORG_DESC
              value: "org3-desc"
            - name: PLANT_NUM
              value: "2"
          args:
            - -c
            - |
              rpc=http://127.0.0.1:8545
              ws_rpc=http://127.0.0.1:8546
              v=$(jq ".rpc=\"$rpc\" | .ws_rpc=\"$ws_rpc\"" /app/resource/provider.json)
              echo $v > /app/resource/provider.json
              while true
              do
                isSyncing=$(geth attach http://127.0.0.1:8545 -exec "eth.syncing")
                echo node isSyncing: $isSyncing
                if [[ $isSyncing == false ]];
                then
                  echo node is fully synced with other nodes!!
                  break
                fi
                sleep 5
              done
              datadir=/ethereum
              filename=$(basename /ethereum/keystore/*)
              account=0x$(jq -r '.address' /ethereum/keystore/$filename)
              password=$(cat /opt/password/password.txt)
              bash /app/start.sh $datadir $account $password
          volumeMounts:
            - name: chaindata
              mountPath: "/ethereum"
            - name: password
              mountPath: "/opt/password"
        - name: org-node
          image: f221267155/eth-testnet:v1
          imagePullPolicy: Never
          command:
            - "/bin/bash"
          args:
            - -c
            - |
              echo $MY_POD_IP
              echo ${MY_POD_IP}
              printenv MY_POD_IP
              filename=$(basename /ethereum/keystore/*)
              account=0x$(jq -r '.address' /ethereum/keystore/$filename)
              geth --miner.gasprice=0 --syncmode "full" --networkid ${NETWORK_ID} --bootnodes enode://`bootnode -writeaddress --nodekey=/opt/bootnode/boot.key`@$(BOOTNODE_SERVICE_HOST):30301 --datadir /ethereum  --unlock $account --password /opt/password/password.txt  --http --http.addr ${MY_POD_IP} --http.port 8545  --http.api 'admin,eth,net,web3,personal,miner' --ws --ws.addr ${MY_POD_IP} --ws.port 8546 --ws.origins '*' --ws.api 'eth,net,web3' --nousb --allow-insecure-unlock
          env:
            - name: NETWORK_ID
              valueFrom:
                configMapKeyRef:
                  name: genesis1
                  key: networkid
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 8545
              name: rpc
            - containerPort: 8546
              name: wsrpc
            - containerPort: 30303
              name: discovery-tcp
              protocol: TCP
            - containerPort: 30303
              name: discovery-udp
              protocol: UDP
          volumeMounts:
            - name: chaindata
              mountPath: "/ethereum"
            - name: genesis
              mountPath: "/opt/genesis"
              readOnly: true
              readOnly: true
            - name: password
              mountPath: "/opt/password"
              readOnly: true
            - name: bootkey
              mountPath: "/opt/bootnode"
              readOnly: true
      initContainers:
        - name: init
          image: f221267155/eth-testnet:v1
          command: ["geth"]
          args: ["--datadir=/ethereum", "account", "new", "--password=/opt/password/password.txt"]
          volumeMounts:
            - name: password
              mountPath: "/opt/password"
              readOnly: true
            - name: chaindata
              mountPath: "/ethereum"
        - name: genesis
          image: f221267155/eth-testnet:v1
          command: ["geth"]
          args: ["--datadir=/ethereum", "init", "/opt/genesis/genesis.json"]
          volumeMounts:
            - name: genesis
              mountPath: /opt/genesis
              readOnly: true
            - name: chaindata
              mountPath: "/ethereum"
      volumes:
        - name: genesis
          configMap:
            name: genesis1
        - name: chaindata
          emptyDir: {}
        - name: password
          secret:
            secretName: password1
        - name: bootkey
          secret:
            secretName: bootkey1
---
kind: Service
apiVersion: v1
metadata:
  name: org3-dapp-service
  namespace: recval
spec:
  type: NodePort
  selector:
    app: org3-dapp-service
  ports:
    - port: 3000
      targetPort: 3000
      name: discovery-tcp
      protocol: TCP
